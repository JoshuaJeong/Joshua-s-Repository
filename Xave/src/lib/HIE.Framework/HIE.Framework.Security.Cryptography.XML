<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HIE.Framework.Security.Cryptography</name>
    </assembly>
    <members>
        <member name="T:HIE.Framework.Security.Cryptography.AESConfiguration">
            <summary>
            AES 암호화 키 정보 환경 설정 요소를 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="F:HIE.Framework.Security.Cryptography.AESConfiguration.KEY_VALUE">
            <summary>
            KEY_VALUE = key
            </summary>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.AESConfiguration.#ctor">
            <summary>
            기본 생성자입니다.
            </summary>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.AESConfiguration.#ctor(System.String)">
            <summary>
            키에 해당하는 <c>AESKeyConfiguration</c> 객체를 생성합니다.
            </summary>
            <param name="name">키(이름)</param>
        </member>
        <member name="P:HIE.Framework.Security.Cryptography.AESConfiguration.Key">
            <summary>
            AES 암호화 키를 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="T:HIE.Framework.Security.Cryptography.AESCrypto">
             <summary>
             AES 알고리즘의 모든 구현이 상속될 기본 클래스를 나타냅니다.
             </summary>
             <remarks>
             AES 암고리즘는 암호화, 복호화 기능을 제공합니다. 
             이 알고리즘에서는 최소 128 비트나 192 비트 또는 256 비트 크기의 키를 지원합니다.
             </remarks>
             <example>
             다음 예제 메서드에서는 지정된 <c>key</c> 를 통해 <c>AESCrypto.EncryptToBase64</c>를 사용하여 intext에서 지정한 문자열을 
             암호화하고 암호화된 결과를 출력합니다.
             <code>
             using System;
             using System.Collections.Generic;
             using System.Text;
             using HIE.Framework.Security.Cryptography;
            
             class AESSample
             {
                 static void Main()
                 {
                     AESEncrypt("aescrypto", "12345", System.Text.Encoding.Default);
                 }
            
                 public static void AESEncrypt(string intext, string key, Encoding encoding)
                 {
                     // 암호화된 결과를 담아놓을 문자열 생성
                     string result = null;
            
                     // 지정된 key와 intext로 암호화 작업
                     result = HIE.Framework.Security.Cryptography.AESCrypto.EncryptToBase64(intext, key, encoding);
            
                     // 암호화된 결과값을 출력
                     Console.WriteLine(result);
                 }
             }
             </code>
             암호 해독도 같은 방식으로 처리되지만 <c>AESCrypto.EncryptToBase64</c> 대신 <c>AESCrypto.DecryptToBase64</c>를 
             사용합니다. 파일을 암호화하는 데 사용된 것과 동일한 <c>key</c> 를 해독하는 데도 사용해야 합니다.
             </example>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.AESCrypto.EncryptToBase64(System.String,System.String,System.Text.Encoding)">
            <summary>
            키를 사용하여 입력 데이터를 암호화하여 <c>String</c>을 반환합니다.
            </summary>
            <remarks>
            <c>EncryptToBase64</c>를 사용하여 이 메서드의 결과를 암호 해독합니다.
            </remarks>
            <param name="text">암호화할 <c>String</c>입니다.</param>
            <param name="key">암호화할 암호키 <c>String</c>입니다.</param>
            <param name="encoding">Encoding 방법입니다.</param>
            <returns>암호화된 <c>String</c>을 반환합니다.</returns>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.AESCrypto.DecryptToBase64(System.String,System.String,System.Text.Encoding)">
            <summary>
            키를 사용하여 입력 데이터를 해독하여 <c>String</c>을 반환합니다.
            </summary>
            <remarks>
            <c>DecryptToBase64</c>를 사용하여 만들어진 암호화된 메시지를 해독합니다.
            암호키는 암화할때와 같은 키를 입력하야 해독을 할 수 있습니다.
            </remarks>
            <param name="text">해독할 <c>String</c>입니다.</param>
            <param name="key">해독할 암호키 <c>String</c>입니다.</param>
            <param name="encoding">Encoding 방법입니다.</param>
            <returns>해독된 <c>String</c>을 반환합니다.</returns>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.AESCrypto.Encrypt(System.Byte[],System.String,System.Byte[])">
            <summary>
            키를 사용하여 입력 데이터를 암호화하여 <c>Byte</c>를 반환합니다.
            </summary>
            <remarks>
            <c>Encrypt</c>를 사용하여 이 메서드의 결과를 암호 해독합니다.
            </remarks>
            <param name="text">암호화할 <c>byte</c>입니다.</param>
            <param name="key">암호화할 암호키 <c>String</c>입니다.</param>
            <param name="keysalt">암호화할 암호기 크기 <c>byte</c>입니다.</param>
            <returns>암호화된 <c>byte</c>을 반환합니다.</returns>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.AESCrypto.Decrypt(System.Byte[],System.String,System.Byte[])">
            <summary>
            키를 사용하여 입력 데이터를 해독하여 <c>Byte</c>을 반환합니다.
            </summary>
            <remarks>
            <c>Decrypt</c>를 사용하여 만들어진 암호화된 메시지를 해독합니다.
            암호키는 암화할때와 같은 키를 입력하야 해독을 할 수 있습니다.
            </remarks>
            <param name="text">해독할 <c>byte</c>입니다.</param>
            <param name="key">해독할 암호키 <c>String</c>입니다.</param>
            <param name="keysalt">해독할 암호기 크기 <c>byte</c>입니다.</param>
            <returns>해독된 <c>byte</c>을 반환합니다.</returns>
        </member>
        <member name="T:HIE.Framework.Security.Cryptography.CryptoConfigurationGroup">
            <summary>
            로그 환경 설정 구성을 그룹화합니다.
            AESConfiguration, RSAConfiguration, TripleDESConfiguration 의 Key 이름을 설정합니다.
            </summary>
        </member>
        <member name="F:HIE.Framework.Security.Cryptography.CryptoConfigurationGroup.KEY_AES">
            <summary>
            KEY_AES = AESKey
            </summary>
        </member>
        <member name="F:HIE.Framework.Security.Cryptography.CryptoConfigurationGroup.KEY_RSA">
            <summary>
            KEY_RSA = RSAKey
            </summary>
        </member>
        <member name="F:HIE.Framework.Security.Cryptography.CryptoConfigurationGroup.KEY_TripleDES">
            <summary>
            KEY_TripleDES = TripleDESKey
            </summary>
        </member>
        <member name="P:HIE.Framework.Security.Cryptography.CryptoConfigurationGroup.AESCfg">
            <summary>
            AES 암호화 키 정보를 가져오거나 설정한다.
            </summary>
        </member>
        <member name="P:HIE.Framework.Security.Cryptography.CryptoConfigurationGroup.RSACfg">
            <summary>
            RSA 암호화 키 정보를 가져오거나 설정한다.
            </summary>
        </member>
        <member name="P:HIE.Framework.Security.Cryptography.CryptoConfigurationGroup.TripleDESCfg">
            <summary>
            TripleDES 암호화 키 정보를 가져오거나 설정한다.
            </summary>
        </member>
        <member name="T:HIE.Framework.Security.Cryptography.MD5Crypto">
             <summary>
             MD5 해시 알고리즘의 모든 구현이 상속될 기본 클래스를 나타냅니다.
             </summary>
             <remarks>
             MD5 알고리즘 자체에 취약점이 발견되었으므로, 호환성 용도로만 사용하시는것이 좋습니다.
             MD5 암호는 암호화 기능만 제공합니다.
             </remarks>
             <example>
             다음 예제 메서드에서는 <c>MD5Crypto.EncryptToBase64</c>를 사용하여 intext에서 지정한 문자열을 
             암호화하고 암호화된 결과를 출력합니다.
             <code>
             using System;
             using System.Collections.Generic;
             using System.Text;
             using HIE.Framework.Security.Cryptography;
            
             class MD5Sample
             {
                 static void Main()
                 {
                     MD5Encrypt("md5crypto", System.Text.Encoding.Default);
                 }
            
                 public static void MD5Encrypt(string intext, Encoding encoding)
                 {
                     // 암호화된 결과를 담아놓을 문자열 생성
                     string result = null;
            
                     // 지정된 intext로 암호화 작업
                     result = HIE.Framework.Security.Cryptography.MD5Crypto.EncryptToBase64(intext, encoding);
            
                     // 암호화된 결과값을 출력
                     Console.WriteLine(result);
                 }
             }
             </code>
             </example>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.MD5Crypto.EncryptToBase64(System.String,System.Text.Encoding)">
            <summary>
            입력 데이터를 암호화하여 <c>String</c>을 반환합니다.
            </summary>
            <remarks>
            <c>EncryptToBase64</c>를 사용하여 이 메서드의 결과를 암호 해독합니다.
            </remarks>
            <param name="text">암호화할 <c>String</c>입니다.</param>
            <param name="encoding">Encoding 방법입니다.</param>
            <returns>암호화된 <c>String</c>을 반환합니다.</returns>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.MD5Crypto.Encrypt(System.Byte[])">
            <summary>
            입력 데이터를 암호화하여 <c>Byte</c>를 반환합니다.
            </summary>
            <remarks>
            <c>Encrypt</c>를 사용하여 이 메서드의 결과를 암호 해독합니다.
            </remarks>
            <param name="text">암호화할 <c>byte</c>입니다.</param>
            <returns>암호화된 <c>byte</c>을 반환합니다.</returns>
        </member>
        <member name="T:HIE.Framework.Security.Cryptography.RSAConfiguration">
            <summary>
            RSA 암호화 키 정보 환경 설정 요소를 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="F:HIE.Framework.Security.Cryptography.RSAConfiguration.PRIVATE_KEY">
            <summary>
            PRIVATE_KEY = privatepath
            </summary>
        </member>
        <member name="F:HIE.Framework.Security.Cryptography.RSAConfiguration.PUBLIC_KEY">
            <summary>
            PUBLIC_KEY = privatepath
            </summary>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.RSAConfiguration.#ctor">
            <summary>
            기본 생성자입니다.
            </summary>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.RSAConfiguration.#ctor(System.String)">
            <summary>
            키에 해당하는 <c>TripleDESKeyConfiguration</c> 객체를 생성합니다.
            </summary>
            <param name="name">키(이름)</param>
        </member>
        <member name="P:HIE.Framework.Security.Cryptography.RSAConfiguration.PrivatePath">
            <summary>
            TripleDES 암호화 개인키(비밀키) 파일위치를 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="P:HIE.Framework.Security.Cryptography.RSAConfiguration.PublicPath">
            <summary>
            TripleDES 암호화 공개키 파일위치를 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="T:HIE.Framework.Security.Cryptography.RSACrypto">
             <summary>
             RSA 알고리즘의 모든 구현이 상속될 기본 클래스를 나타냅니다.
             </summary>
             <remarks>
             RSA 암호는 암호화, 복호화 기능을 제공합니다. 
             개인키(비밀키)는 암호화와 복호화 모두가 가능합니다. 공개키는 암호화만 가능합니다.
             이 알고리즘에서는 키 길이가 384 - 16384비트(8비트 단위로 증가)인 키를 지원합니다.
             </remarks>
             <example>
             다음 예제 메서드에서는 지정된 <c>key</c> 를 통해 <c>RSACrypto.EncryptToBase64</c>를 사용하여 intext에서 지정한 문자열을 
             암호화하고 암호화된 결과를 출력합니다.
             <code>
             using System;
             using System.Collections.Generic;
             using System.Text;
             using HIE.Framework.Security.Cryptography;
            
             class RSASample
             {
                 static void Main()
                 {
                     RSAEncrypt("rsacrypto", "1024", System.Text.Encoding.Default);
                 }
            
                 public static void RSAEncrypt(string intext, string key, Encoding encoding)
                 {
                     // 암호화된 결과를 담아놓을 문자열 생성
                     string result = null;
            
                     // 개인키(비밀키)를 담아놓을 문자열 생성
                     string privatekey = null;
                     // 키 생성이 true 이면 키가 만들어져 privatekey 에 반환
                     if (HIE.Framework.Security.Cryptography.RSACrypto.GetKey(Convert.ToInt16(key)))
                     {
                         privatekey = HIE.Framework.Security.Cryptography.RSACrypto.GetPrivateKey;
                     }
                     // 생성된 privatekey와 지정된 intext로 암호화 작업
                     result = HIE.Framework.Security.Cryptography.RSACrypto.EncryptToBase64(intext, privatekey, System.Text.Encoding.Default);
            
                     // 암호화된 결과값을 출력
                     Console.WriteLine(result);
                 }
             }
             </code>
             <para>암호 해독도 같은 방식으로 처리되지만 <c>RSACrypto.EncryptToBase64</c> 대신 <c>RSACrypto.DecryptToBase64</c>를 
             사용합니다. 파일을 암호화하는 데 사용된 것과 동일한 <c>key</c> 를 해독하는 데도 사용해야 합니다.</para>
             <para>RSA 알고리즘에서 키를 암호화하여 같은 키값이라도 달리 표현되어 파일형식으로 키를 생성하여 암호, 해독을
             하는것이 바람직합니다.</para>
             </example>
        </member>
        <member name="F:HIE.Framework.Security.Cryptography.RSACrypto._privatekey">
            <summary>
            개인키(비밀키) 입니다.
            </summary>
        </member>
        <member name="F:HIE.Framework.Security.Cryptography.RSACrypto._publickey">
            <summary>
            공개키 입니다.
            </summary>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.RSACrypto.EncryptToBase64(System.String,System.String,System.Text.Encoding)">
            <summary>
            키를 사용하여 입력 데이터를 암호화하여 <c>String</c>을 반환합니다.
            </summary>
            <remarks>
            <c>EncryptToBase64</c>를 사용하여 이 메서드의 결과를 암호 해독합니다.
            </remarks>
            <param name="text">암호화할 <c>String</c>입니다.</param>
            <param name="key">개인키(비밀키) 또는 공개키 <c>String</c>입니다.</param>
            <param name="encoding">Encoding 방법입니다.</param>
            <returns>암호화된 <c>String</c>을 반환합니다.</returns>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.RSACrypto.DecryptToBase64(System.String,System.String,System.Text.Encoding)">
            <summary>
            키를 사용하여 입력 데이터를 해독하여 <c>String</c>을 반환합니다.
            </summary>
            <remarks>
            <c>DecryptToBase64</c>를 사용하여 만들어진 암호화된 메시지를 해독합니다.
            암호키는 암화할때와 같은 키를 입력하야 해독을 할 수 있습니다.
            </remarks>
            <param name="text">해독할 <c>String</c>입니다.</param>
            <param name="key">개인키(비밀키) <c>String</c>입니다.</param>
            <param name="encoding">Encoding 방법입니다.</param>
            <returns>해독된 <c>String</c>을 반환합니다.</returns>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.RSACrypto.Encrypt(System.Byte[],System.String)">
            <summary>
            키를 사용하여 입력 데이터를 암호화하여 <c>Byte</c>를 반환합니다.
            </summary>
            <remarks>
            <c>Encrypt</c>를 사용하여 이 메서드의 결과를 암호 해독합니다.
            </remarks>
            <param name="text">암호화할 <c>byte</c>입니다.</param>
            <param name="key">개인키(비밀키) 또는 공개키 <c>String</c>입니다.</param>
            <returns>암호화된 <c>byte</c>을 반환합니다.</returns>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.RSACrypto.Decrypt(System.Byte[],System.String)">
            <summary>
            키를 사용하여 입력 데이터를 해독하여 <c>Byte</c>을 반환합니다.
            </summary>
            <remarks>
            <c>Decrypt</c>를 사용하여 만들어진 암호화된 메시지를 해독합니다.
            암호키는 암화할때와 같은 키를 입력하야 해독을 할 수 있습니다.
            </remarks>
            <param name="text">해독할 <c>byte</c>입니다.</param>
            <param name="key">개인키(비밀키) <c>String</c>입니다.</param>
            <returns>해독된 <c>byte</c>을 반환합니다.</returns>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.RSACrypto.RsaKey(System.String)">
            <summary>
            개인키(비밀키)와 공개키를 생성하여 반환합니다.
            </summary>
            <remarks>
            개인키(비밀키)와 공개키를 생성하여 <c>RSACryptoServiceProvider</c> 으로 반환합니다.
            </remarks>
            <param name="key">개인키(비밀키)와 공개키 만들어질 키 <c>String</c>입니다.</param>
            <returns>생성된 <c>RSACryptoServiceProvider</c> 으로 반환합니다.</returns>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.RSACrypto.GetKey(System.Int32)">
            <summary>
            개인키(비밀키), 공개키를 만듭니다.
            </summary>
            <remarks>
            생성 후 개인키(비밀키)는 GetPrivateKey으로 가져옵니다.
            생성 후 공개키는 GetPublicKey으로 가져옵니다.
            </remarks>
            <param name="KeySize">KeySize 비트단위 (384 ~ 16,384)인 <c>int</c>입니다.</param>
            <returns>암호화된 개인키(비밀키)와 공개키 생성될 경우 <c>true</c>이고, 생성되지 않았을 경우 <c>false</c> 반환합니다.</returns>
        </member>
        <member name="P:HIE.Framework.Security.Cryptography.RSACrypto.GetPrivateKey">
            <summary>
            암호화된 개인키(비밀키) 가져옵니다.
            </summary>
            <remarks>
            먼저 GetKey(KeySize) 키를 생성하셔야 합니다.
            생성이 정상적으로 이루어지면 가져올 수 있습니다.
            </remarks>
        </member>
        <member name="P:HIE.Framework.Security.Cryptography.RSACrypto.GetPublicKey">
            <summary>
            암호화된 공개키를 가져옵니다.
            </summary>
            <remarks>
            먼저 GetKey(KeySize) 키를 생성하셔야 합니다.
            생성이 정상적으로 이루어지면 가져올 수 있습니다.
            </remarks>
        </member>
        <member name="T:HIE.Framework.Security.Cryptography.SHA1Crypto">
             <summary>
             SHA1 해시 알고리즘의 모든 구현이 상속될 기본 클래스를 나타냅니다.
             </summary>
             <remarks>
             <para>해시는 많은 용량의 데이터를 나타내는 고정된 크기의 고유 값으로 사용됩니다. 
             두 데이터 집합의 해시는 해당하는 데이터도 일치할 경우에 일치해야 합니다. 
             데이터에 작은 변경이 있으면 해시에 예측할 수 없는 커다란 변경이 발생합니다.</para>
             <para>SHA1 암호는 암호화 기능만 제공합니다.
             SHA1 알고리즘에 대한 해시 크기는 160비트입니다.</para>
             </remarks>
             <example>
             다음 예제 메서드에서는 <c>SHA1Crypto.EncryptToBase64</c>를 사용하여 intext에서 지정한 문자열을 
             암호화하고 암호화된 결과를 출력합니다.
             <code>
             using System;
             using System.Collections.Generic;
             using System.Text;
             using HIE.Framework.Security.Cryptography;
            
             class SHA1Sample
             {
                 static void Main()
                 {
                     SHA1Encrypt("sha1crypto", System.Text.Encoding.Default);
                 }
            
                 public static void SHA1Encrypt(string intext, Encoding encoding)
                 {
                     // 암호화된 결과를 담아놓을 문자열 생성
                     string result = null;
            
                     // 지정된 intext로 암호화 작업
                     result = HIE.Framework.Security.Cryptography.SHA1Crypto.EncryptToBase64(intext, encoding);
            
                     // 암호화된 결과값을 출력
                     Console.WriteLine(result);
                 }
             }
             </code>
             </example>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.SHA1Crypto.EncryptToBase64(System.String,System.Text.Encoding)">
            <summary>
            입력 데이터를 암호화하여 <c>String</c>을 반환합니다.
            </summary>
            <remarks>
            <c>EncryptToBase64</c>를 사용하여 이 메서드의 결과를 암호 해독합니다.
            </remarks>
            <param name="text">암호화할 <c>String</c>입니다.</param>
            <param name="encoding">Encoding 방법입니다.</param>
            <returns>암호화된 <c>String</c>을 반환합니다.</returns>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.SHA1Crypto.Encrypt(System.Byte[])">
            <summary>
            입력 데이터를 암호화하여 <c>Byte</c>를 반환합니다.
            </summary>
            <remarks>
            <c>Encrypt</c>를 사용하여 이 메서드의 결과를 암호 해독합니다.
            </remarks>
            <param name="text">암호화할 <c>byte</c>입니다.</param>
            <returns>암호화된 <c>byte</c>을 반환합니다.</returns>
        </member>
        <member name="T:HIE.Framework.Security.Cryptography.TripleDESConfiguration">
            <summary>
            TripleDES 암호화 키 정보 환경 설정 요소를 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="F:HIE.Framework.Security.Cryptography.TripleDESConfiguration.KEY_VALUE">
            <summary>
            KEY_VALUE = key
            </summary>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.TripleDESConfiguration.#ctor">
            <summary>
            기본 생성자입니다.
            </summary>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.TripleDESConfiguration.#ctor(System.String)">
            <summary>
            키에 해당하는 <c>TripleDESKeyConfiguration</c> 객체를 생성합니다.
            </summary>
            <param name="name">키(이름)</param>
        </member>
        <member name="P:HIE.Framework.Security.Cryptography.TripleDESConfiguration.Key">
            <summary>
            TripleDES 암호화 키를 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="T:HIE.Framework.Security.Cryptography.TripleDESCrypto">
             <summary>
             TripleDES 알고리즘을 3중 데이터 암호화 표준 알고리즘에 대한 기본 클래스를 나타냅니다. 
             </summary>
             <remarks>
             <para>TripleDES에서는 DES 알고리즘을 연속해서 3회 반복 사용합니다. 2 또는 3개의 56비트 키를 사용할 수 있습니다.
             이 알고리즘에서는 한 번에 64비트씩 증가하는 128비트에서 192비트까지의 키 길이를 지원합니다.</para>
             <para>TripleDES 암호는 암호화, 복호화 기능을 제공합니다.</para>
             </remarks>
             <example>
             다음 예제 메서드에서는 지정된 <c>key</c> 를 통해 <c>TripleDESCrypto.EncryptToBase64</c>를 사용하여 intext에서 지정한 문자열을 
             암호화하고 암호화된 결과를 출력합니다.
             <code>
             using System;
             using System.Collections.Generic;
             using System.Text;
             using HIE.Framework.Security.Cryptography;
            
             class TripleDESSample
             {
                 static void Main()
                 {
                     TripleDESEncrypt("tripledescrypto", "tripledes", System.Text.Encoding.Default);
                 }
            
                 public static void TripleDESEncrypt(string intext, string key, Encoding encoding)
                 {
                     // 암호화된 결과를 담아놓을 문자열 생성
                     string result = null;
            
                     // 지정된 key와 intext로 암호화 작업
                     result = HIE.Framework.Security.Cryptography.TripleDESCrypto.EncryptToBase64(intext, key, encoding);
            
                     // 암호화된 결과값을 출력
                     Console.WriteLine(result);
                 }
             }
             </code>
             암호 해독도 같은 방식으로 처리되지만 <c>TripleDESCrypto.EncryptToBase64</c> 대신 <c>TripleDESCrypto.DecryptToBase64</c>를 
             사용합니다. 파일을 암호화하는 데 사용된 것과 동일한 <c>key</c> 를 해독하는 데도 사용해야 합니다.
             </example>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.TripleDESCrypto.EncryptToBase64(System.String,System.String,System.Text.Encoding)">
            <summary>
            키를 사용하여 입력 데이터를 암호화하여 <c>String</c>을 반환합니다.
            </summary>
            <remarks>
            <c>EncryptToBase64</c>를 사용하여 이 메서드의 결과를 암호 해독합니다.
            </remarks>
            <param name="text">암호화할 <c>String</c>입니다.</param>
            <param name="key">암호화할 암호키 <c>String</c>입니다.</param>
            <param name="encoding">Encoding 방법입니다.</param>
            <returns>암호화된 <c>String</c>을 반환합니다.</returns>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.TripleDESCrypto.DecryptToBase64(System.String,System.String,System.Text.Encoding)">
            <summary>
            키를 사용하여 입력 데이터를 해독하여 <c>String</c>을 반환합니다.
            </summary>
            <remarks>
            <c>DecryptToBase64</c>를 사용하여 만들어진 암호화된 메시지를 해독합니다.
            암호키는 암화할때와 같은 키를 입력하야 해독을 할 수 있습니다.
            </remarks>
            <param name="text">해독할 <c>String</c>입니다.</param>
            <param name="key">해독할 암호키 <c>String</c>입니다.</param>
            <param name="encoding">Encoding 방법입니다.</param>
            <returns>해독된 <c>String</c>을 반환합니다.</returns>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.TripleDESCrypto.Encrypt(System.Byte[],System.Byte[])">
            <summary>
            키를 사용하여 입력 데이터를 암호화하여 <c>Byte</c>를 반환합니다.
            </summary>
            <remarks>
            <c>Encrypt</c>를 사용하여 이 메서드의 결과를 암호 해독합니다.
            </remarks>
            <param name="text">암호화할 <c>byte</c>입니다.</param>
            <param name="key">암호화할 암호키 <c>byte</c>입니다.</param>
            <returns>암호화된 <c>byte</c>을 반환합니다.</returns>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.TripleDESCrypto.Decrypt(System.Byte[],System.Byte[])">
            <summary>
            키를 사용하여 입력 데이터를 해독하여 <c>Byte</c>을 반환합니다.
            </summary>
            <remarks>
            <c>Decrypt</c>를 사용하여 만들어진 암호화된 메시지를 해독합니다.
            암호키는 암화할때와 같은 키를 입력하야 해독을 할 수 있습니다.
            </remarks>
            <param name="text">해독할 <c>byte</c>입니다.</param>
            <param name="key">해독할 암호키 <c>byte</c>입니다.</param>
            <returns>해독된 <c>byte</c>을 반환합니다.</returns>
        </member>
        <member name="M:HIE.Framework.Security.Cryptography.TripleDESCrypto.GetKey(System.Byte[])">
            <summary>
            암호키를 생성하여 반환합니다.
            </summary>
            <remarks>
            암호키를 생성하여 <c>TripleDESCryptoServiceProvider</c> 으로 반환합니다.
            </remarks>
            <param name="key">암호키 <c>byte</c>입니다.</param>
            <returns></returns>
        </member>
    </members>
</doc>
